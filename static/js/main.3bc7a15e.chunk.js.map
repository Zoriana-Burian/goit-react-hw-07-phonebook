{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/actions-phone/actions-phone.js","redux/operations-phone/operations-phone.js","redux/selector-phone/selector-phone.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/reducer-phone/reducer-phone.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getFilter","state","contacts","filter","visibleContacts","createSelector","items","name","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","OnDeleteContact","id","contactId","delete","then","catch","error","className","s","contactList","map","number","type","onClick","button","propType","PropTypes","arrayOf","shape","isRequired","string","func","ContactForm","useState","setName","setNumber","handleChange","event","target","value","onSubmit","preventDefault","contact","post","data","contactOperations","label","input","onChange","Filter","contactActions","App","useEffect","a","get","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","length","alert","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bc7a15e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2NNET\",\"name\":\"ContactList_name__29z8L\",\"number\":\"ContactList_number__1m5F6\",\"button\":\"ContactList_button__8Tocd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__38_A_\",\"input\":\"ContactForm_input__1TCeC\",\"button\":\"ContactForm_button__uB-TV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2InBQ\",\"label\":\"Filter_label__1xj77\",\"input\":\"Filter_input__3OPwP\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from '../../redux/actions-phone/actions-phone';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContact = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContacts = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getItems = state => state.contacts.items;\r\n\r\nexport const visibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contacts =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as contactOperations from '../../redux/operations-phone/operations-phone';\r\nimport { visibleContacts } from '../../redux/selector-phone/selector-phone';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(visibleContacts);\r\n  const dispatch = useDispatch();\r\n  const OnDeleteContact = id => dispatch(contactOperations.deleteContacts(id));\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contacts} key={id}>\r\n          <p className={s.name}>{name}:</p>\r\n          <p className={s.number}>{number}</p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => OnDeleteContact(id)}\r\n            className={s.button}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propType = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  OnDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as contactOperations from '../../redux/operations-phone/operations-phone';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(contactOperations.addContact(name, number));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as contactActions from '../../redux/actions-phone/actions-phone';\r\nimport { getFilter } from '../../redux/selector-phone/selector-phone';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n  const onChange = event =>\r\n    dispatch(contactActions.changeFilter(event.target.value));\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n","import React, { useEffect } from 'react';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport { useDispatch } from 'react-redux';\nimport * as contactOperations from './redux/operations-phone/operations-phone';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactOperations.fetchContact());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2>Contacts</h2>\n      <ContactList />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilter,\r\n} from '../../redux/actions-phone/actions-phone';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    const ADD = state.filter(contact => payload.name === contact.name);\r\n    return ADD.length !== 1\r\n      ? [...state, payload]\r\n      : [...state] && alert(`${payload.name} is already in contacts.`);\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import contactsReducer from './reducer-phone/reducer-phone';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}